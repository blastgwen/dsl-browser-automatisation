/*
* generated by Xtext
*/
grammar InternalSlnDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.selenium.gram.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.selenium.gram.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.selenium.gram.xtext.services.SlnDslGrammarAccess;

}

@parser::members {
 
 	private SlnDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SlnDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubprocedure
entryRuleSubprocedure 
:
{ before(grammarAccess.getSubprocedureRule()); }
	 ruleSubprocedure
{ after(grammarAccess.getSubprocedureRule()); } 
	 EOF 
;

// Rule Subprocedure
ruleSubprocedure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubprocedureAccess().getGroup()); }
(rule__Subprocedure__Group__0)
{ after(grammarAccess.getSubprocedureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHead
entryRuleHead 
:
{ before(grammarAccess.getHeadRule()); }
	 ruleHead
{ after(grammarAccess.getHeadRule()); } 
	 EOF 
;

// Rule Head
ruleHead
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHeadAccess().getAlternatives()); }
(rule__Head__Alternatives)
{ after(grammarAccess.getHeadAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionReference
entryRuleFunctionReference 
:
{ before(grammarAccess.getFunctionReferenceRule()); }
	 ruleFunctionReference
{ after(grammarAccess.getFunctionReferenceRule()); } 
	 EOF 
;

// Rule FunctionReference
ruleFunctionReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionReferenceAccess().getFunctionNameAssignment()); }
(rule__FunctionReference__FunctionNameAssignment)
{ after(grammarAccess.getFunctionReferenceAccess().getFunctionNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionName
entryRuleFunctionName 
:
{ before(grammarAccess.getFunctionNameRule()); }
	 ruleFunctionName
{ after(grammarAccess.getFunctionNameRule()); } 
	 EOF 
;

// Rule FunctionName
ruleFunctionName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionNameAccess().getNameAssignment()); }
(rule__FunctionName__NameAssignment)
{ after(grammarAccess.getFunctionNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCall
entryRuleFunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getAlternatives()); }
(rule__FunctionCall__Alternatives)
{ after(grammarAccess.getFunctionCallAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarIDAssignment()); }
(rule__VariableReference__VarIDAssignment)
{ after(grammarAccess.getVariableReferenceAccess().getVarIDAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableName
entryRuleVariableName 
:
{ before(grammarAccess.getVariableNameRule()); }
	 ruleVariableName
{ after(grammarAccess.getVariableNameRule()); } 
	 EOF 
;

// Rule VariableName
ruleVariableName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableNameAccess().getNameAssignment()); }
(rule__VariableName__NameAssignment)
{ after(grammarAccess.getVariableNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral 
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLiteralAccess().getAlternatives()); }
(rule__NumberLiteral__Alternatives)
{ after(grammarAccess.getNumberLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstruction
entryRuleInstruction 
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
(rule__Instruction__Alternatives)
{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getGroup()); }
(rule__Definition__Group__0)
{ after(grammarAccess.getDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignation
entryRuleAssignation 
:
{ before(grammarAccess.getAssignationRule()); }
	 ruleAssignation
{ after(grammarAccess.getAssignationRule()); } 
	 EOF 
;

// Rule Assignation
ruleAssignation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignationAccess().getGroup()); }
(rule__Assignation__Group__0)
{ after(grammarAccess.getAssignationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditional
entryRuleConditional 
:
{ before(grammarAccess.getConditionalRule()); }
	 ruleConditional
{ after(grammarAccess.getConditionalRule()); } 
	 EOF 
;

// Rule Conditional
ruleConditional
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalAccess().getGroup()); }
(rule__Conditional__Group__0)
{ after(grammarAccess.getConditionalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoop
entryRuleLoop 
:
{ before(grammarAccess.getLoopRule()); }
	 ruleLoop
{ after(grammarAccess.getLoopRule()); } 
	 EOF 
;

// Rule Loop
ruleLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopAccess().getAlternatives()); }
(rule__Loop__Alternatives)
{ after(grammarAccess.getLoopAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhile
entryRuleWhile 
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileAccess().getGroup()); }
(rule__While__Group__0)
{ after(grammarAccess.getWhileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForeach
entryRuleForeach 
:
{ before(grammarAccess.getForeachRule()); }
	 ruleForeach
{ after(grammarAccess.getForeachRule()); } 
	 EOF 
;

// Rule Foreach
ruleForeach
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForeachAccess().getGroup()); }
(rule__Foreach__Group__0)
{ after(grammarAccess.getForeachAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionInstruction
entryRuleActionInstruction 
:
{ before(grammarAccess.getActionInstructionRule()); }
	 ruleActionInstruction
{ after(grammarAccess.getActionInstructionRule()); } 
	 EOF 
;

// Rule ActionInstruction
ruleActionInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionInstructionAccess().getAlternatives()); }
(rule__ActionInstruction__Alternatives)
{ after(grammarAccess.getActionInstructionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionExpression
entryRuleActionExpression 
:
{ before(grammarAccess.getActionExpressionRule()); }
	 ruleActionExpression
{ after(grammarAccess.getActionExpressionRule()); } 
	 EOF 
;

// Rule ActionExpression
ruleActionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionExpressionAccess().getGroup()); }
(rule__ActionExpression__Group__0)
{ after(grammarAccess.getActionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Head__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getGroup_0()); }
(rule__Head__Group_0__0)
{ after(grammarAccess.getHeadAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getHeadAccess().getGroup_1()); }
(rule__Head__Group_1__0)
{ after(grammarAccess.getHeadAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_0()); }
(rule__FunctionCall__Group_0__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallAccess().getGroup_1()); }
(rule__FunctionCall__Group_1__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getNumberLiteralAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberLiteralAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getNumberLiteralAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getVarAssignment_0()); }
(rule__Expression__VarAssignment_0)
{ after(grammarAccess.getExpressionAccess().getVarAssignment_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getNumberLiteralParserRuleCall_1()); }
	ruleNumberLiteral
{ after(grammarAccess.getExpressionAccess().getNumberLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_2()); }
(rule__Expression__Group_2__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_3()); }
(rule__Expression__Group_3__0)
{ after(grammarAccess.getExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_4()); }
(rule__Expression__Group_4__0)
{ after(grammarAccess.getExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getActAssignment_5()); }
(rule__Expression__ActAssignment_5)
{ after(grammarAccess.getExpressionAccess().getActAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExclamationMarkKeyword_2_0_0()); }

	'!' 

{ after(grammarAccess.getExpressionAccess().getExclamationMarkKeyword_2_0_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getSizeofKeyword_2_0_1()); }

	'sizeof' 

{ after(grammarAccess.getExpressionAccess().getSizeofKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAllKeyword_3_0_0()); }

	'All' 

{ after(grammarAccess.getExpressionAccess().getAllKeyword_3_0_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getAnyKeyword_3_0_1()); }

	'Any' 

{ after(grammarAccess.getExpressionAccess().getAnyKeyword_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getEqualsSignEqualsSignKeyword_4_0_0()); }

	'==' 

{ after(grammarAccess.getExpressionAccess().getEqualsSignEqualsSignKeyword_4_0_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getLessThanSignKeyword_4_0_1()); }

	'<' 

{ after(grammarAccess.getExpressionAccess().getLessThanSignKeyword_4_0_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGreaterThanSignKeyword_4_0_2()); }

	'>' 

{ after(grammarAccess.getExpressionAccess().getGreaterThanSignKeyword_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getDefAssignment_0()); }
(rule__Instruction__DefAssignment_0)
{ after(grammarAccess.getInstructionAccess().getDefAssignment_0()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getFuncAssignment_1()); }
(rule__Instruction__FuncAssignment_1)
{ after(grammarAccess.getInstructionAccess().getFuncAssignment_1()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getCondAssignment_2()); }
(rule__Instruction__CondAssignment_2)
{ after(grammarAccess.getInstructionAccess().getCondAssignment_2()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getLoopAssignment_3()); }
(rule__Instruction__LoopAssignment_3)
{ after(grammarAccess.getInstructionAccess().getLoopAssignment_3()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getActAssignment_4()); }
(rule__Instruction__ActAssignment_4)
{ after(grammarAccess.getInstructionAccess().getActAssignment_4()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getAssAssignment_5()); }
(rule__Instruction__AssAssignment_5)
{ after(grammarAccess.getInstructionAccess().getAssAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getWhileAssignment_0()); }
(rule__Loop__WhileAssignment_0)
{ after(grammarAccess.getLoopAccess().getWhileAssignment_0()); }
)

    |(
{ before(grammarAccess.getLoopAccess().getForAssignment_1()); }
(rule__Loop__ForAssignment_1)
{ after(grammarAccess.getLoopAccess().getForAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getGroup_0()); }
(rule__ActionInstruction__Group_0__0)
{ after(grammarAccess.getActionInstructionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getActionInstructionAccess().getGroup_1()); }
(rule__ActionInstruction__Group_1__0)
{ after(grammarAccess.getActionInstructionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getActionInstructionAccess().getGroup_2()); }
(rule__ActionInstruction__Group_2__0)
{ after(grammarAccess.getActionInstructionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getCheckKeyword_1_0_0()); }

	'check' 

{ after(grammarAccess.getActionInstructionAccess().getCheckKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getActionInstructionAccess().getClickKeyword_1_0_1()); }

	'click' 

{ after(grammarAccess.getActionInstructionAccess().getClickKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpressionAccess().getVerifyKeyword_0_0()); }

	'verify' 

{ after(grammarAccess.getActionExpressionAccess().getVerifyKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getActionExpressionAccess().getSelectKeyword_0_1()); }

	'select' 

{ after(grammarAccess.getActionExpressionAccess().getSelectKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSubsAssignment_0()); }
(rule__Model__SubsAssignment_0)*
{ after(grammarAccess.getModelAccess().getSubsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMainKeyword_1()); }

	'main' 

{ after(grammarAccess.getModelAccess().getMainKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModelAccess().getMainAssignment_2()); }
(rule__Model__MainAssignment_2)
{ after(grammarAccess.getModelAccess().getMainAssignment_2()); }
)
(
{ before(grammarAccess.getModelAccess().getMainAssignment_2()); }
(rule__Model__MainAssignment_2)*
{ after(grammarAccess.getModelAccess().getMainAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getEndmainKeyword_3()); }

	'endmain' 

{ after(grammarAccess.getModelAccess().getEndmainKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Subprocedure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subprocedure__Group__0__Impl
	rule__Subprocedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprocedure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubprocedureAccess().getSubKeyword_0()); }

	'sub' 

{ after(grammarAccess.getSubprocedureAccess().getSubKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subprocedure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subprocedure__Group__1__Impl
	rule__Subprocedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprocedure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubprocedureAccess().getHeadAssignment_1()); }
(rule__Subprocedure__HeadAssignment_1)
{ after(grammarAccess.getSubprocedureAccess().getHeadAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subprocedure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subprocedure__Group__2__Impl
	rule__Subprocedure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprocedure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSubprocedureAccess().getBodyAssignment_2()); }
(rule__Subprocedure__BodyAssignment_2)
{ after(grammarAccess.getSubprocedureAccess().getBodyAssignment_2()); }
)
(
{ before(grammarAccess.getSubprocedureAccess().getBodyAssignment_2()); }
(rule__Subprocedure__BodyAssignment_2)*
{ after(grammarAccess.getSubprocedureAccess().getBodyAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subprocedure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subprocedure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprocedure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubprocedureAccess().getEndsubKeyword_3()); }

	'endsub' 

{ after(grammarAccess.getSubprocedureAccess().getEndsubKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Head__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_0__0__Impl
	rule__Head__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameAssignment_0_0()); }
(rule__Head__NameAssignment_0_0)
{ after(grammarAccess.getHeadAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }

	'()' 

{ after(grammarAccess.getHeadAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Head__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__0__Impl
	rule__Head__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameAssignment_1_0()); }
(rule__Head__NameAssignment_1_0)
{ after(grammarAccess.getHeadAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__1__Impl
	rule__Head__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getHeadAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__2__Impl
	rule__Head__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getVarKeyword_1_2()); }

	'var' 

{ after(grammarAccess.getHeadAccess().getVarKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__3__Impl
	rule__Head__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getArgsIDAssignment_1_3()); }
(rule__Head__ArgsIDAssignment_1_3)
{ after(grammarAccess.getHeadAccess().getArgsIDAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__4__Impl
	rule__Head__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getGroup_1_4()); }
(rule__Head__Group_1_4__0)*
{ after(grammarAccess.getHeadAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getRightParenthesisKeyword_1_5()); }

	')' 

{ after(grammarAccess.getHeadAccess().getRightParenthesisKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Head__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1_4__0__Impl
	rule__Head__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getCommaKeyword_1_4_0()); }

	',' 

{ after(grammarAccess.getHeadAccess().getCommaKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1_4__1__Impl
	rule__Head__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getVarKeyword_1_4_1()); }

	'var' 

{ after(grammarAccess.getHeadAccess().getVarKeyword_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getArgsIDAssignment_1_4_2()); }
(rule__Head__ArgsIDAssignment_1_4_2)
{ after(grammarAccess.getHeadAccess().getArgsIDAssignment_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionCall__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0__0__Impl
	rule__FunctionCall__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionReferenceParserRuleCall_0_0()); }
	ruleFunctionReference
{ after(grammarAccess.getFunctionCallAccess().getFunctionReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }

	'()' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__0__Impl
	rule__FunctionCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionReferenceParserRuleCall_1_0()); }
	ruleFunctionReference
{ after(grammarAccess.getFunctionCallAccess().getFunctionReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__1__Impl
	rule__FunctionCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__2__Impl
	rule__FunctionCall__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_1_2()); }
(rule__FunctionCall__ArgsAssignment_1_2)
{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__3__Impl
	rule__FunctionCall__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_1_3()); }
(rule__FunctionCall__Group_1_3__0)*
{ after(grammarAccess.getFunctionCallAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionCall__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_3__0__Impl
	rule__FunctionCall__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_1_3_1()); }
(rule__FunctionCall__ArgsAssignment_1_3_1)
{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__0__Impl
	rule__Expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_2_0()); }
(rule__Expression__Alternatives_2_0)
{ after(grammarAccess.getExpressionAccess().getAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__1__Impl
	rule__Expression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__2__Impl
	rule__Expression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpAssignment_2_2()); }
(rule__Expression__ExpAssignment_2_2)
{ after(grammarAccess.getExpressionAccess().getExpAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__0__Impl
	rule__Expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_3_0()); }
(rule__Expression__Alternatives_3_0)
{ after(grammarAccess.getExpressionAccess().getAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__1__Impl
	rule__Expression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_3_1()); }

	'(' 

{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__2__Impl
	rule__Expression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getVarKeyword_3_2()); }

	'var' 

{ after(grammarAccess.getExpressionAccess().getVarKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__3__Impl
	rule__Expression__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getVarNameAssignment_3_3()); }
(rule__Expression__VarNameAssignment_3_3)
{ after(grammarAccess.getExpressionAccess().getVarNameAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__4__Impl
	rule__Expression__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getHyphenMinusGreaterThanSignKeyword_3_4()); }

	'->' 

{ after(grammarAccess.getExpressionAccess().getHyphenMinusGreaterThanSignKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__5__Impl
	rule__Expression__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpAssignment_3_5()); }
(rule__Expression__ExpAssignment_3_5)
{ after(grammarAccess.getExpressionAccess().getExpAssignment_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_3_6()); }

	')' 

{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Expression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__0__Impl
	rule__Expression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_4_0()); }
(rule__Expression__Alternatives_4_0)
{ after(grammarAccess.getExpressionAccess().getAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__1__Impl
	rule__Expression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftAssignment_4_1()); }
(rule__Expression__LeftAssignment_4_1)
{ after(grammarAccess.getExpressionAccess().getLeftAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightAssignment_4_2()); }
(rule__Expression__RightAssignment_4_2)
{ after(grammarAccess.getExpressionAccess().getRightAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getDefinitionAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getVarIDAssignment_1()); }
(rule__Definition__VarIDAssignment_1)
{ after(grammarAccess.getDefinitionAccess().getVarIDAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getDefinitionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getExpAssignment_3()); }
(rule__Definition__ExpAssignment_3)
{ after(grammarAccess.getDefinitionAccess().getExpAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Assignation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group__0__Impl
	rule__Assignation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getVarAssignment_0()); }
(rule__Assignation__VarAssignment_0)
{ after(grammarAccess.getAssignationAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group__1__Impl
	rule__Assignation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignationAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getExpAssignment_2()); }
(rule__Assignation__ExpAssignment_2)
{ after(grammarAccess.getAssignationAccess().getExpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Conditional__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__0__Impl
	rule__Conditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getConditionalAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__1__Impl
	rule__Conditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getExpAssignment_1()); }
(rule__Conditional__ExpAssignment_1)
{ after(grammarAccess.getConditionalAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__2__Impl
	rule__Conditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getConditionalAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__3__Impl
	rule__Conditional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getConditionalAccess().getTrueInsAssignment_3()); }
(rule__Conditional__TrueInsAssignment_3)
{ after(grammarAccess.getConditionalAccess().getTrueInsAssignment_3()); }
)
(
{ before(grammarAccess.getConditionalAccess().getTrueInsAssignment_3()); }
(rule__Conditional__TrueInsAssignment_3)*
{ after(grammarAccess.getConditionalAccess().getTrueInsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__4__Impl
	rule__Conditional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getGroup_4()); }
(rule__Conditional__Group_4__0)?
{ after(grammarAccess.getConditionalAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getEndifKeyword_5()); }

	'endif' 

{ after(grammarAccess.getConditionalAccess().getEndifKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Conditional__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_4__0__Impl
	rule__Conditional__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getElseKeyword_4_0()); }

	'else' 

{ after(grammarAccess.getConditionalAccess().getElseKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getConditionalAccess().getFalseInsAssignment_4_1()); }
(rule__Conditional__FalseInsAssignment_4_1)
{ after(grammarAccess.getConditionalAccess().getFalseInsAssignment_4_1()); }
)
(
{ before(grammarAccess.getConditionalAccess().getFalseInsAssignment_4_1()); }
(rule__Conditional__FalseInsAssignment_4_1)*
{ after(grammarAccess.getConditionalAccess().getFalseInsAssignment_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__While__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getCondAssignment_2()); }
(rule__While__CondAssignment_2)
{ after(grammarAccess.getWhileAccess().getCondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__4__Impl
	rule__While__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getDoKeyword_4()); }

	'do' 

{ after(grammarAccess.getWhileAccess().getDoKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__5__Impl
	rule__While__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWhileAccess().getInsAssignment_5()); }
(rule__While__InsAssignment_5)
{ after(grammarAccess.getWhileAccess().getInsAssignment_5()); }
)
(
{ before(grammarAccess.getWhileAccess().getInsAssignment_5()); }
(rule__While__InsAssignment_5)*
{ after(grammarAccess.getWhileAccess().getInsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getEndwhileKeyword_6()); }

	'endwhile' 

{ after(grammarAccess.getWhileAccess().getEndwhileKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Foreach__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__0__Impl
	rule__Foreach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getForeachKeyword_0()); }

	'foreach' 

{ after(grammarAccess.getForeachAccess().getForeachKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__1__Impl
	rule__Foreach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForeachAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__2__Impl
	rule__Foreach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getVarAssignment_2()); }
(rule__Foreach__VarAssignment_2)
{ after(grammarAccess.getForeachAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__3__Impl
	rule__Foreach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getInKeyword_3()); }

	'in' 

{ after(grammarAccess.getForeachAccess().getInKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__4__Impl
	rule__Foreach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getExpAssignment_4()); }
(rule__Foreach__ExpAssignment_4)
{ after(grammarAccess.getForeachAccess().getExpAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__5__Impl
	rule__Foreach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getForeachAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__6__Impl
	rule__Foreach__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getDoKeyword_6()); }

	'do' 

{ after(grammarAccess.getForeachAccess().getDoKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__7__Impl
	rule__Foreach__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getForeachAccess().getInsAssignment_7()); }
(rule__Foreach__InsAssignment_7)
{ after(grammarAccess.getForeachAccess().getInsAssignment_7()); }
)
(
{ before(grammarAccess.getForeachAccess().getInsAssignment_7()); }
(rule__Foreach__InsAssignment_7)*
{ after(grammarAccess.getForeachAccess().getInsAssignment_7()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getEndforKeyword_8()); }

	'endfor' 

{ after(grammarAccess.getForeachAccess().getEndforKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ActionInstruction__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_0__0__Impl
	rule__ActionInstruction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getOpenKeyword_0_0()); }

	'open' 

{ after(grammarAccess.getActionInstructionAccess().getOpenKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInstruction__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_0__1__Impl
	rule__ActionInstruction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getActionInstructionAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInstruction__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_0__2__Impl
	rule__ActionInstruction__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getUrlAssignment_0_2()); }
(rule__ActionInstruction__UrlAssignment_0_2)
{ after(grammarAccess.getActionInstructionAccess().getUrlAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInstruction__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getActionInstructionAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActionInstruction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_1__0__Impl
	rule__ActionInstruction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getAlternatives_1_0()); }
(rule__ActionInstruction__Alternatives_1_0)
{ after(grammarAccess.getActionInstructionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInstruction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_1__1__Impl
	rule__ActionInstruction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getActionInstructionAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInstruction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_1__2__Impl
	rule__ActionInstruction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getElementAssignment_1_2()); }
(rule__ActionInstruction__ElementAssignment_1_2)
{ after(grammarAccess.getActionInstructionAccess().getElementAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInstruction__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getActionInstructionAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActionInstruction__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_2__0__Impl
	rule__ActionInstruction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getTypeKeyword_2_0()); }

	'type(' 

{ after(grammarAccess.getActionInstructionAccess().getTypeKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInstruction__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_2__1__Impl
	rule__ActionInstruction__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getElementAssignment_2_1()); }
(rule__ActionInstruction__ElementAssignment_2_1)
{ after(grammarAccess.getActionInstructionAccess().getElementAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInstruction__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_2__2__Impl
	rule__ActionInstruction__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getCommaKeyword_2_2()); }

	',' 

{ after(grammarAccess.getActionInstructionAccess().getCommaKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInstruction__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_2__3__Impl
	rule__ActionInstruction__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getValueAssignment_2_3()); }
(rule__ActionInstruction__ValueAssignment_2_3)
{ after(grammarAccess.getActionInstructionAccess().getValueAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInstruction__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionInstruction__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getRightParenthesisKeyword_2_4()); }

	')' 

{ after(grammarAccess.getActionInstructionAccess().getRightParenthesisKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ActionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionExpression__Group__0__Impl
	rule__ActionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpressionAccess().getAlternatives_0()); }
(rule__ActionExpression__Alternatives_0)
{ after(grammarAccess.getActionExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionExpression__Group__1__Impl
	rule__ActionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getActionExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionExpression__Group__2__Impl
	rule__ActionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpressionAccess().getElementAssignment_2()); }
(rule__ActionExpression__ElementAssignment_2)
{ after(grammarAccess.getActionExpressionAccess().getElementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getActionExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Model__SubsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSubsSubprocedureParserRuleCall_0_0()); }
	ruleSubprocedure{ after(grammarAccess.getModelAccess().getSubsSubprocedureParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MainAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMainInstructionParserRuleCall_2_0()); }
	ruleInstruction{ after(grammarAccess.getModelAccess().getMainInstructionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subprocedure__HeadAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubprocedureAccess().getHeadHeadParserRuleCall_1_0()); }
	ruleHead{ after(grammarAccess.getSubprocedureAccess().getHeadHeadParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subprocedure__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubprocedureAccess().getBodyInstructionParserRuleCall_2_0()); }
	ruleInstruction{ after(grammarAccess.getSubprocedureAccess().getBodyInstructionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_0_0_0()); }
	ruleFunctionName{ after(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_1_0_0()); }
	ruleFunctionName{ after(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__ArgsIDAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getArgsIDVariableNameParserRuleCall_1_3_0()); }
	ruleVariableName{ after(grammarAccess.getHeadAccess().getArgsIDVariableNameParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__ArgsIDAssignment_1_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getArgsIDVariableNameParserRuleCall_1_4_2_0()); }
	ruleVariableName{ after(grammarAccess.getHeadAccess().getArgsIDVariableNameParserRuleCall_1_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionReference__FunctionNameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameCrossReference_0()); }
(
{ before(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionNameAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getFunctionNameAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_1_3_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VarIDAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameCrossReference_0()); }
(
{ before(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableNameAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getVariableNameAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getVarVariableReferenceParserRuleCall_0_0()); }
	ruleVariableReference{ after(grammarAccess.getExpressionAccess().getVarVariableReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpExpressionParserRuleCall_2_2_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExpExpressionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__VarNameAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getVarNameVariableNameParserRuleCall_3_3_0()); }
	ruleVariableName{ after(grammarAccess.getExpressionAccess().getVarNameVariableNameParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpAssignment_3_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpExpressionParserRuleCall_3_5_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExpExpressionParserRuleCall_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LeftAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftExpressionParserRuleCall_4_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getLeftExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_4_2_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ActAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getActActionExpressionParserRuleCall_5_0()); }
	ruleActionExpression{ after(grammarAccess.getExpressionAccess().getActActionExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__DefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getDefDefinitionParserRuleCall_0_0()); }
	ruleDefinition{ after(grammarAccess.getInstructionAccess().getDefDefinitionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__FuncAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getFuncFunctionCallParserRuleCall_1_0()); }
	ruleFunctionCall{ after(grammarAccess.getInstructionAccess().getFuncFunctionCallParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__CondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getCondConditionalParserRuleCall_2_0()); }
	ruleConditional{ after(grammarAccess.getInstructionAccess().getCondConditionalParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__LoopAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getLoopLoopParserRuleCall_3_0()); }
	ruleLoop{ after(grammarAccess.getInstructionAccess().getLoopLoopParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__ActAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getActActionInstructionParserRuleCall_4_0()); }
	ruleActionInstruction{ after(grammarAccess.getInstructionAccess().getActActionInstructionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__AssAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getAssAssignationParserRuleCall_5_0()); }
	ruleAssignation{ after(grammarAccess.getInstructionAccess().getAssAssignationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__VarIDAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getVarIDVariableNameParserRuleCall_1_0()); }
	ruleVariableName{ after(grammarAccess.getDefinitionAccess().getVarIDVariableNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ExpAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getExpExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getDefinitionAccess().getExpExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getVarVariableReferenceParserRuleCall_0_0()); }
	ruleVariableReference{ after(grammarAccess.getAssignationAccess().getVarVariableReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__ExpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getExpExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignationAccess().getExpExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getExpExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getConditionalAccess().getExpExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__TrueInsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getTrueInsInstructionParserRuleCall_3_0()); }
	ruleInstruction{ after(grammarAccess.getConditionalAccess().getTrueInsInstructionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__FalseInsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getFalseInsInstructionParserRuleCall_4_1_0()); }
	ruleInstruction{ after(grammarAccess.getConditionalAccess().getFalseInsInstructionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__WhileAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getWhileWhileParserRuleCall_0_0()); }
	ruleWhile{ after(grammarAccess.getLoopAccess().getWhileWhileParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__ForAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getForForeachParserRuleCall_1_0()); }
	ruleForeach{ after(grammarAccess.getLoopAccess().getForForeachParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__CondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getCondExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getWhileAccess().getCondExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__InsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getInsInstructionParserRuleCall_5_0()); }
	ruleInstruction{ after(grammarAccess.getWhileAccess().getInsInstructionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getVarVariableNameParserRuleCall_2_0()); }
	ruleVariableName{ after(grammarAccess.getForeachAccess().getVarVariableNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__ExpAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getExpExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getForeachAccess().getExpExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__InsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getInsInstructionParserRuleCall_7_0()); }
	ruleInstruction{ after(grammarAccess.getForeachAccess().getInsInstructionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__UrlAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getUrlURLTerminalRuleCall_0_2_0()); }
	RULE_URL{ after(grammarAccess.getActionInstructionAccess().getUrlURLTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__ElementAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getElementExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getActionInstructionAccess().getElementExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__ElementAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getElementExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getActionInstructionAccess().getElementExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__ValueAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getValueExpressionParserRuleCall_2_3_0()); }
	ruleExpression{ after(grammarAccess.getActionInstructionAccess().getValueExpressionParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression__ElementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpressionAccess().getElementExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getActionExpressionAccess().getElementExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_URL : ('a'..'z')+ '://' (('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+|('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')* ('.' ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')*)*) (':' ('0'..'9')+)? ('/' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'~'|'+'|'.'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')*)* ('?' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'='|'&'|';'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')+ ('+' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'='|'&'|';'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')+)*)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


